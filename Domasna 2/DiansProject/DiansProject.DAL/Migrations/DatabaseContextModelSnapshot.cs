// <auto-generated />
using System;
using DiansProject.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiansProject.DAL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DiansProject.DAL.Entities.Feature", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GeometryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PropertiesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GeometryId");

                    b.HasIndex("PropertiesId");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("DiansProject.DAL.Entities.Geometry", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Geometries");
                });

            modelBuilder.Entity("DiansProject.DAL.Entities.Properties", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Access")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Amenity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BicycleParking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Covered")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wheelchair")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("DiansProject.DAL.Entities.Review", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ConditionsRating")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("OverallRating")
                        .HasColumnType("int");

                    b.Property<int>("SafetyRating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("DiansProject.DAL.Entities.Feature", b =>
                {
                    b.HasOne("DiansProject.DAL.Entities.Geometry", "Geometry")
                        .WithMany()
                        .HasForeignKey("GeometryId");

                    b.HasOne("DiansProject.DAL.Entities.Properties", "Properties")
                        .WithMany()
                        .HasForeignKey("PropertiesId");

                    b.Navigation("Geometry");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("DiansProject.DAL.Entities.Review", b =>
                {
                    b.HasOne("DiansProject.DAL.Entities.Feature", null)
                        .WithMany("Reviews")
                        .HasForeignKey("FeatureId");
                });

            modelBuilder.Entity("DiansProject.DAL.Entities.Feature", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
